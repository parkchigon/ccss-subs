<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.lgu.ccss.sync.mapper.SyncMapperOracle">

	<resultMap id="aiAuthInfoVo" type="com.lgu.ccss.common.model.AIAuthInfoVO">
		<result property="aiAuthSeq" 	column="AI_AUTH_SEQ" />
		<result property="membId"	column="MEMB_ID" />
		<result property="deviceToken"	column="DEVICE_TOKEN" />
		<result property="platformToken"		column="PLATFORM_TOKEN" />
		<result property="useYn"	column="USE_YN" />
		<result property="aiAuthExpDt"	column="AI_AUTH_EXP_DT" />
		<result property="regId"	column="REG_ID" />
		<result property="regDt"	column="REG_DT" />
		<result property="updId"	column="UPD_ID" />
		<result property="updDt"	column="UPD_DT" />
		
	</resultMap>
	
	<insert id="insertAiToken" parameterType="com.lgu.ccss.common.model.AIAuthInfoVO">
		MERGE INTO TB_AI_AUTHINFO
			USING DUAL ON(MEMB_ID = #{membId})
			WHEN MATCHED THEN
				UPDATE SET
					DEVICE_TOKEN = #{deviceToken},
					PLATFORM_TOKEN = #{platformToken},
					AI_AUTH_EXP_DT = TO_DATE(#{aiAuthExpDt},'YYYYMMDDHH24MISS'),
					UPD_ID = #{updId},
					UPD_DT = SYSDATE
			WHEN NOT MATCHED THEN
				INSERT (
					AI_AUTH_SEQ,
					MEMB_ID,
					DEVICE_TOKEN,
					PLATFORM_TOKEN,
					USE_YN,
					AI_AUTH_EXP_DT,
					REG_ID,
					REG_DT,
					UPD_ID,
					UPD_DT
				)
				VALUES (
					SEQ_AI_AUTHINFO_01.NEXTVAL,
					#{membId},
					#{deviceToken},
					#{platformToken},
					#{useYn},
					TO_DATE(#{aiAuthExpDt},'YYYYMMDDHH24MISS'),
					#{regId},
					SYSDATE,
					#{updId},
					SYSDATE
				) 
	</insert>
	<update id="updateAiPlatformToken" parameterType="com.lgu.ccss.common.model.AIAuthInfoVO">
		UPDATE
			TB_AI_AUTHINFO
		SET
			PLATFORM_TOKEN = #{platforkToken},
			UPD_ID = #{updId},
			UPD_DT = SYSDATE
		WHERE
			MEMB_ID = #{membId}
	</update>
	<select id="selectAIAUTHToken" resultMap="aiAuthInfoVo" parameterType="com.lgu.ccss.common.model.AIAuthInfoVO">
		select 
			AI_AUTH_SEQ,
			MEMB_ID,
			DEVICE_TOKEN,
			PLATFORM_TOKEN,
			USE_YN,
			AI_AUTH_EXP_DT,
			REG_ID,
			REG_DT,
			UPD_ID,
			UPD_DT
		from 
			TB_AI_AUTHINFO
		where
			MEMB_ID = #{membId}
	</select>
	<delete id="deleteAIAUTHToken" parameterType="com.lgu.ccss.common.model.AIAuthInfoVO">
		DELETE
		FROM	TB_AI_AUTHINFO
		WHERE
			MEMB_ID = #{membId}
	</delete>
	
	   
</mapper>